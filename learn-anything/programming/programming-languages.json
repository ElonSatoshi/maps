{
  "title": "learn anything - programming - programming languages",
  "tag": "",
  "id": 1668,
  "map": {
    "text": "programming languages",
    "nodes": [
      {
        "text": "paradigms  ️",
        "nodes": [
          {
            "text": "multi-paradigm",
            "nodes": [
              {
                "text": "python  ️",
                "note": "high level, general purpose, interpreted emphasising code readability ",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/python",
                    "text": "python  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "java  ️",
                "note": "concurrent, class based, object oriented, compiles to byte code to be ran on JVM",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/java",
                    "text": "java  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "javascript  ️",
                "note": "high level, dynamic, untyped and interpreted, prototype based with first class functions, making it a multi paradigm language",
                "nodes": [
                  {
                    "text": "typescript  ️",
                    "note": "- good understanding of javascript is helpful as typescript is superset of javascript",
                    "nodes": [],
                    "resources": [
                      {
                        "url": "/programming/programming-languages/typescript",
                        "text": "typescript  ️",
                        "category": "mindmap",
                        "note": "",
                        "author": "",
                        "score": {
                          "up": 0,
                          "down": 0
                        }
                      }
                    ],
                    "author": ""
                  }
                ],
                "resources": [
                  {
                    "url": "/programming/programming-languages/javascript",
                    "text": "javascript  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "go  ️",
                "note": "compiled, statically typed with garbage collection, limited structural typing and memory safety features with focus great concurrency features",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/go",
                    "text": "go  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "swift  ️",
                "note": "general purpose, multi paradigm and compiled",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/swift",
                    "text": "swift  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "rust  ️",
                "note": "general purpose, designed to be safe, concurrent and practical, supporting functional and imperative-procedural paradigms",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/rust",
                    "text": "rust  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "scala  ️",
                "note": "general purpose, functional with strong static type system, compiles to Java bytecode",
                "nodes": [
                  {
                    "text": "functional  ️",
                    "nodes": [
                      {
                        "text": "erlang  ️",
                        "note": "general purpose, concurrent, functional with a garbage collected runtime system",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/erlang",
                            "text": "erlang  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "elixir  ️",
                        "note": "functional, concurrent, general purpose, runs on erlang virtual machine, builds on top of erlang and shares same abstractions",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/elixir",
                            "text": "elixir  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "haskell  ️",
                        "note": "general purpose, purely functional with non strict semantics and strong static typing",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/haskell",
                            "text": "haskell  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "clojure  ️",
                        "note": "general purpose with emphasis on functional programming, runs on jam ,clr and js engine, treats code as data and has a macro system",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/clojure",
                            "text": "clojure  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "elm  ️",
                        "note": "domain specific for declaratively creating web browser based GUI, purely functional with emphasis on usability, performance and robustness",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/elm",
                            "text": "elm  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "idris  ️",
                        "note": "general purpose, purely functional with dependent types, supports interactive theorem proving",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/idris",
                            "text": "idris  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "coq  ️",
                        "note": "interactive theorem prover, allows expression of mathematical assertions, mechanically checks proofs of these assertions and helps find formal proofs",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/coq",
                            "text": "coq  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "agda  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/agda",
                            "text": "agda  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "purescript  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/purescript",
                            "text": "purescript  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "frege  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/frege",
                            "text": "frege  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      }
                    ],
                    "resources": [
                      {
                        "url": "/programming/programming-paradigms/functional-programming",
                        "text": "functional  ️",
                        "category": "mindmap",
                        "note": "",
                        "author": "",
                        "score": {
                          "up": 0,
                          "down": 0
                        }
                      }
                    ],
                    "author": ""
                  }
                ],
                "resources": [
                  {
                    "url": "/programming/programming-languages/scala",
                    "text": "scala  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "r  ️",
                "note": "language and software environment for statistical computing and graphics",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/r",
                    "text": "r  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "c++  ️",
                "note": "imperative, object oriented and generic with low level memory manipulation",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming-languages/c--",
                    "text": "c++  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "c  ️",
                "note": "imperative, procedural and compiled, low level access to memory",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming-languages/c",
                    "text": "c  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "kotlin  ️",
                "note": "statically typed, runs on jvm, can be compiled to javascript source code",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/kotlin",
                    "text": "kotlin  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "elixir  ️",
                "note": "functional, concurrent, general purpose, runs on erlang virtual machine, builds on top of erlang and shares same abstractions",
                "nodes": [
                  {
                    "text": "functional  ️",
                    "nodes": [
                      {
                        "text": "scala  ️",
                        "note": "general purpose, functional with strong static type system, compiles to Java bytecode",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/scala",
                            "text": "scala  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "erlang  ️",
                        "note": "general purpose, concurrent, functional with a garbage collected runtime system",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/erlang",
                            "text": "erlang  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "haskell  ️",
                        "note": "general purpose, purely functional with non strict semantics and strong static typing",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/haskell",
                            "text": "haskell  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "clojure  ️",
                        "note": "general purpose with emphasis on functional programming, runs on jam ,clr and js engine, treats code as data and has a macro system",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/clojure",
                            "text": "clojure  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "elm  ️",
                        "note": "domain specific for declaratively creating web browser based GUI, purely functional with emphasis on usability, performance and robustness",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/elm",
                            "text": "elm  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "idris  ️",
                        "note": "general purpose, purely functional with dependent types, supports interactive theorem proving",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/idris",
                            "text": "idris  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "coq  ️",
                        "note": "interactive theorem prover, allows expression of mathematical assertions, mechanically checks proofs of these assertions and helps find formal proofs",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/coq",
                            "text": "coq  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "agda  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/agda",
                            "text": "agda  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "purescript  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/purescript",
                            "text": "purescript  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "frege  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/frege",
                            "text": "frege  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      }
                    ],
                    "resources": [
                      {
                        "url": "/programming/programming-paradigms/functional-programming",
                        "text": "functional  ️",
                        "category": "mindmap",
                        "note": "",
                        "author": "",
                        "score": {
                          "up": 0,
                          "down": 0
                        }
                      }
                    ],
                    "author": ""
                  }
                ],
                "resources": [
                  {
                    "url": "/programming/programming-languages/elixir",
                    "text": "elixir  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "erlang  ️",
                "note": "general purpose, concurrent, functional with a garbage collected runtime system",
                "nodes": [
                  {
                    "text": "functional  ️",
                    "nodes": [
                      {
                        "text": "scala  ️",
                        "note": "general purpose, functional with strong static type system, compiles to Java bytecode",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/scala",
                            "text": "scala  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "elixir  ️",
                        "note": "functional, concurrent, general purpose, runs on erlang virtual machine, builds on top of erlang and shares same abstractions",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/elixir",
                            "text": "elixir  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "haskell  ️",
                        "note": "general purpose, purely functional with non strict semantics and strong static typing",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/haskell",
                            "text": "haskell  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "clojure  ️",
                        "note": "general purpose with emphasis on functional programming, runs on jam ,clr and js engine, treats code as data and has a macro system",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/clojure",
                            "text": "clojure  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "elm  ️",
                        "note": "domain specific for declaratively creating web browser based GUI, purely functional with emphasis on usability, performance and robustness",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/elm",
                            "text": "elm  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "idris  ️",
                        "note": "general purpose, purely functional with dependent types, supports interactive theorem proving",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/idris",
                            "text": "idris  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "coq  ️",
                        "note": "interactive theorem prover, allows expression of mathematical assertions, mechanically checks proofs of these assertions and helps find formal proofs",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/coq",
                            "text": "coq  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "agda  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/agda",
                            "text": "agda  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "purescript  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/purescript",
                            "text": "purescript  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "frege  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/frege",
                            "text": "frege  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      }
                    ],
                    "resources": [
                      {
                        "url": "/programming/programming-paradigms/functional-programming",
                        "text": "functional  ️",
                        "category": "mindmap",
                        "note": "",
                        "author": "",
                        "score": {
                          "up": 0,
                          "down": 0
                        }
                      }
                    ],
                    "author": ""
                  }
                ],
                "resources": [
                  {
                    "url": "/programming/programming-languages/erlang",
                    "text": "erlang  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "ruby  ️",
                "note": "dynamic, reflective, object oriented, general purpose",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/ruby",
                    "text": "ruby  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "lisp  ️",
                "note": "originally created as mathematical notation for computer programs, was used in AI research, linked lists are one of lisp’s major data structures and lisp source code is made of lists thus allowing to manipulate source code as a data structure",
                "nodes": [
                  {
                    "text": "racket  ️",
                    "nodes": [],
                    "resources": [
                      {
                        "url": "/programming/programming-languages/racket",
                        "text": "racket  ️",
                        "category": "mindmap",
                        "note": "",
                        "author": "",
                        "score": {
                          "up": 0,
                          "down": 0
                        }
                      }
                    ],
                    "author": ""
                  },
                  {
                    "text": "scheme  ️",
                    "nodes": [],
                    "resources": [
                      {
                        "url": "/programming/programming-languages/scheme",
                        "text": "scheme  ️",
                        "category": "mindmap",
                        "note": "",
                        "author": "",
                        "score": {
                          "up": 0,
                          "down": 0
                        }
                      }
                    ],
                    "author": ""
                  }
                ],
                "resources": [
                  {
                    "url": "/programming/programming-languages/lisp",
                    "text": "lisp  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "nim  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/nim",
                    "text": "nim  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "julia  ️",
                "note": "high level, dynamic, designed to address needs of high performance numerical analysis and computational science",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/julia",
                    "text": "julia  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "perl  ️",
                "note": "general purpose, interpreted, dynamic powerful text processing",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/perl",
                    "text": "perl  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "matlab  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/matlab",
                    "text": "matlab  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "c#  ️",
                "note": "strong typed, imperative, declarative, functional, generic, object oriented and component oriented",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/c-sharp",
                    "text": "c#  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "assembly  ️",
                "note": "low level, very strong correspondence between the language and architecture’s machine code instructions",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/assembly",
                    "text": "assembly  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "lua  ️",
                "note": "lightweight, multi-paradigm designed for embedded systems and clients",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/lua",
                    "text": "lua  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "dart  ️",
                "note": "general purpose, object oriented, class defined, single inheritance",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/dart",
                    "text": "dart  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "OCaml  ️",
                "note": "extends caml language with object oriented programming constructs",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/ocaml",
                    "text": "OCaml  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "fortran  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/fortran",
                    "text": "fortran  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "d  ️",
                "note": "object oriented, imperative, multi paradigm system programming language",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/d",
                    "text": "d  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "crystal  ️",
                "note": "general purpose, object oriented, statically type checked with implementation of advanced global type inference",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/crystal",
                    "text": "crystal  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "SQL  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/sql",
                    "text": "SQL  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "F#  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/f-sharp",
                    "text": "F#  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              }
            ],
            "resources": [
              {
                "url": "http://www.wikiwand.com/en/Programming_paradigm#/Multi-paradigm",
                "text": "multi-paradigm",
                "category": "wiki",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "functional  ️",
            "nodes": [
              {
                "text": "scala  ️",
                "note": "general purpose, functional with strong static type system, compiles to Java bytecode",
                "nodes": [
                  {
                    "text": "multi-paradigm",
                    "nodes": [
                      {
                        "text": "python  ️",
                        "note": "high level, general purpose, interpreted emphasising code readability ",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/python",
                            "text": "python  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "java  ️",
                        "note": "concurrent, class based, object oriented, compiles to byte code to be ran on JVM",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/java",
                            "text": "java  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "javascript  ️",
                        "note": "high level, dynamic, untyped and interpreted, prototype based with first class functions, making it a multi paradigm language",
                        "nodes": [
                          {
                            "text": "typescript  ️",
                            "note": "- good understanding of javascript is helpful as typescript is superset of javascript",
                            "nodes": [],
                            "resources": [
                              {
                                "url": "/programming/programming-languages/typescript",
                                "text": "typescript  ️",
                                "category": "mindmap",
                                "note": "",
                                "author": "",
                                "score": {
                                  "up": 0,
                                  "down": 0
                                }
                              }
                            ],
                            "author": ""
                          }
                        ],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/javascript",
                            "text": "javascript  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "go  ️",
                        "note": "compiled, statically typed with garbage collection, limited structural typing and memory safety features with focus great concurrency features",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/go",
                            "text": "go  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "swift  ️",
                        "note": "general purpose, multi paradigm and compiled",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/swift",
                            "text": "swift  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "rust  ️",
                        "note": "general purpose, designed to be safe, concurrent and practical, supporting functional and imperative-procedural paradigms",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/rust",
                            "text": "rust  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "r  ️",
                        "note": "language and software environment for statistical computing and graphics",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/r",
                            "text": "r  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "c++  ️",
                        "note": "imperative, object oriented and generic with low level memory manipulation",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming-languages/c--",
                            "text": "c++  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "c  ️",
                        "note": "imperative, procedural and compiled, low level access to memory",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming-languages/c",
                            "text": "c  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "kotlin  ️",
                        "note": "statically typed, runs on jvm, can be compiled to javascript source code",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/kotlin",
                            "text": "kotlin  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "elixir  ️",
                        "note": "functional, concurrent, general purpose, runs on erlang virtual machine, builds on top of erlang and shares same abstractions",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/elixir",
                            "text": "elixir  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "erlang  ️",
                        "note": "general purpose, concurrent, functional with a garbage collected runtime system",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/erlang",
                            "text": "erlang  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "ruby  ️",
                        "note": "dynamic, reflective, object oriented, general purpose",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/ruby",
                            "text": "ruby  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "lisp  ️",
                        "note": "originally created as mathematical notation for computer programs, was used in AI research, linked lists are one of lisp’s major data structures and lisp source code is made of lists thus allowing to manipulate source code as a data structure",
                        "nodes": [
                          {
                            "text": "racket  ️",
                            "nodes": [],
                            "resources": [
                              {
                                "url": "/programming/programming-languages/racket",
                                "text": "racket  ️",
                                "category": "mindmap",
                                "note": "",
                                "author": "",
                                "score": {
                                  "up": 0,
                                  "down": 0
                                }
                              }
                            ],
                            "author": ""
                          },
                          {
                            "text": "scheme  ️",
                            "nodes": [],
                            "resources": [
                              {
                                "url": "/programming/programming-languages/scheme",
                                "text": "scheme  ️",
                                "category": "mindmap",
                                "note": "",
                                "author": "",
                                "score": {
                                  "up": 0,
                                  "down": 0
                                }
                              }
                            ],
                            "author": ""
                          }
                        ],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/lisp",
                            "text": "lisp  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "nim  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/nim",
                            "text": "nim  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "julia  ️",
                        "note": "high level, dynamic, designed to address needs of high performance numerical analysis and computational science",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/julia",
                            "text": "julia  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "perl  ️",
                        "note": "general purpose, interpreted, dynamic powerful text processing",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/perl",
                            "text": "perl  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "matlab  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/matlab",
                            "text": "matlab  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "c#  ️",
                        "note": "strong typed, imperative, declarative, functional, generic, object oriented and component oriented",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/c-sharp",
                            "text": "c#  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "assembly  ️",
                        "note": "low level, very strong correspondence between the language and architecture’s machine code instructions",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/assembly",
                            "text": "assembly  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "lua  ️",
                        "note": "lightweight, multi-paradigm designed for embedded systems and clients",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/lua",
                            "text": "lua  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "dart  ️",
                        "note": "general purpose, object oriented, class defined, single inheritance",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/dart",
                            "text": "dart  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "OCaml  ️",
                        "note": "extends caml language with object oriented programming constructs",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/ocaml",
                            "text": "OCaml  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "fortran  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/fortran",
                            "text": "fortran  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "d  ️",
                        "note": "object oriented, imperative, multi paradigm system programming language",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/d",
                            "text": "d  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "crystal  ️",
                        "note": "general purpose, object oriented, statically type checked with implementation of advanced global type inference",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/crystal",
                            "text": "crystal  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "SQL  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/sql",
                            "text": "SQL  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "F#  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/f-sharp",
                            "text": "F#  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      }
                    ],
                    "resources": [
                      {
                        "url": "http://www.wikiwand.com/en/Programming_paradigm#/Multi-paradigm",
                        "text": "multi-paradigm",
                        "category": "wiki",
                        "note": "",
                        "author": "",
                        "score": {
                          "up": 0,
                          "down": 0
                        }
                      }
                    ],
                    "author": ""
                  }
                ],
                "resources": [
                  {
                    "url": "/programming/programming-languages/scala",
                    "text": "scala  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "erlang  ️",
                "note": "general purpose, concurrent, functional with a garbage collected runtime system",
                "nodes": [
                  {
                    "text": "multi-paradigm",
                    "nodes": [
                      {
                        "text": "python  ️",
                        "note": "high level, general purpose, interpreted emphasising code readability ",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/python",
                            "text": "python  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "java  ️",
                        "note": "concurrent, class based, object oriented, compiles to byte code to be ran on JVM",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/java",
                            "text": "java  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "javascript  ️",
                        "note": "high level, dynamic, untyped and interpreted, prototype based with first class functions, making it a multi paradigm language",
                        "nodes": [
                          {
                            "text": "typescript  ️",
                            "note": "- good understanding of javascript is helpful as typescript is superset of javascript",
                            "nodes": [],
                            "resources": [
                              {
                                "url": "/programming/programming-languages/typescript",
                                "text": "typescript  ️",
                                "category": "mindmap",
                                "note": "",
                                "author": "",
                                "score": {
                                  "up": 0,
                                  "down": 0
                                }
                              }
                            ],
                            "author": ""
                          }
                        ],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/javascript",
                            "text": "javascript  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "go  ️",
                        "note": "compiled, statically typed with garbage collection, limited structural typing and memory safety features with focus great concurrency features",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/go",
                            "text": "go  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "swift  ️",
                        "note": "general purpose, multi paradigm and compiled",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/swift",
                            "text": "swift  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "rust  ️",
                        "note": "general purpose, designed to be safe, concurrent and practical, supporting functional and imperative-procedural paradigms",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/rust",
                            "text": "rust  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "scala  ️",
                        "note": "general purpose, functional with strong static type system, compiles to Java bytecode",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/scala",
                            "text": "scala  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "r  ️",
                        "note": "language and software environment for statistical computing and graphics",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/r",
                            "text": "r  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "c++  ️",
                        "note": "imperative, object oriented and generic with low level memory manipulation",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming-languages/c--",
                            "text": "c++  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "c  ️",
                        "note": "imperative, procedural and compiled, low level access to memory",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming-languages/c",
                            "text": "c  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "kotlin  ️",
                        "note": "statically typed, runs on jvm, can be compiled to javascript source code",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/kotlin",
                            "text": "kotlin  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "elixir  ️",
                        "note": "functional, concurrent, general purpose, runs on erlang virtual machine, builds on top of erlang and shares same abstractions",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/elixir",
                            "text": "elixir  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "ruby  ️",
                        "note": "dynamic, reflective, object oriented, general purpose",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/ruby",
                            "text": "ruby  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "lisp  ️",
                        "note": "originally created as mathematical notation for computer programs, was used in AI research, linked lists are one of lisp’s major data structures and lisp source code is made of lists thus allowing to manipulate source code as a data structure",
                        "nodes": [
                          {
                            "text": "racket  ️",
                            "nodes": [],
                            "resources": [
                              {
                                "url": "/programming/programming-languages/racket",
                                "text": "racket  ️",
                                "category": "mindmap",
                                "note": "",
                                "author": "",
                                "score": {
                                  "up": 0,
                                  "down": 0
                                }
                              }
                            ],
                            "author": ""
                          },
                          {
                            "text": "scheme  ️",
                            "nodes": [],
                            "resources": [
                              {
                                "url": "/programming/programming-languages/scheme",
                                "text": "scheme  ️",
                                "category": "mindmap",
                                "note": "",
                                "author": "",
                                "score": {
                                  "up": 0,
                                  "down": 0
                                }
                              }
                            ],
                            "author": ""
                          }
                        ],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/lisp",
                            "text": "lisp  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "nim  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/nim",
                            "text": "nim  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "julia  ️",
                        "note": "high level, dynamic, designed to address needs of high performance numerical analysis and computational science",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/julia",
                            "text": "julia  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "perl  ️",
                        "note": "general purpose, interpreted, dynamic powerful text processing",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/perl",
                            "text": "perl  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "matlab  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/matlab",
                            "text": "matlab  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "c#  ️",
                        "note": "strong typed, imperative, declarative, functional, generic, object oriented and component oriented",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/c-sharp",
                            "text": "c#  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "assembly  ️",
                        "note": "low level, very strong correspondence between the language and architecture’s machine code instructions",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/assembly",
                            "text": "assembly  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "lua  ️",
                        "note": "lightweight, multi-paradigm designed for embedded systems and clients",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/lua",
                            "text": "lua  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "dart  ️",
                        "note": "general purpose, object oriented, class defined, single inheritance",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/dart",
                            "text": "dart  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "OCaml  ️",
                        "note": "extends caml language with object oriented programming constructs",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/ocaml",
                            "text": "OCaml  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "fortran  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/fortran",
                            "text": "fortran  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "d  ️",
                        "note": "object oriented, imperative, multi paradigm system programming language",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/d",
                            "text": "d  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "crystal  ️",
                        "note": "general purpose, object oriented, statically type checked with implementation of advanced global type inference",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/crystal",
                            "text": "crystal  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "SQL  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/sql",
                            "text": "SQL  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "F#  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/f-sharp",
                            "text": "F#  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      }
                    ],
                    "resources": [
                      {
                        "url": "http://www.wikiwand.com/en/Programming_paradigm#/Multi-paradigm",
                        "text": "multi-paradigm",
                        "category": "wiki",
                        "note": "",
                        "author": "",
                        "score": {
                          "up": 0,
                          "down": 0
                        }
                      }
                    ],
                    "author": ""
                  }
                ],
                "resources": [
                  {
                    "url": "/programming/programming-languages/erlang",
                    "text": "erlang  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "elixir  ️",
                "note": "functional, concurrent, general purpose, runs on erlang virtual machine, builds on top of erlang and shares same abstractions",
                "nodes": [
                  {
                    "text": "multi-paradigm",
                    "nodes": [
                      {
                        "text": "python  ️",
                        "note": "high level, general purpose, interpreted emphasising code readability ",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/python",
                            "text": "python  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "java  ️",
                        "note": "concurrent, class based, object oriented, compiles to byte code to be ran on JVM",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/java",
                            "text": "java  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "javascript  ️",
                        "note": "high level, dynamic, untyped and interpreted, prototype based with first class functions, making it a multi paradigm language",
                        "nodes": [
                          {
                            "text": "typescript  ️",
                            "note": "- good understanding of javascript is helpful as typescript is superset of javascript",
                            "nodes": [],
                            "resources": [
                              {
                                "url": "/programming/programming-languages/typescript",
                                "text": "typescript  ️",
                                "category": "mindmap",
                                "note": "",
                                "author": "",
                                "score": {
                                  "up": 0,
                                  "down": 0
                                }
                              }
                            ],
                            "author": ""
                          }
                        ],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/javascript",
                            "text": "javascript  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "go  ️",
                        "note": "compiled, statically typed with garbage collection, limited structural typing and memory safety features with focus great concurrency features",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/go",
                            "text": "go  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "swift  ️",
                        "note": "general purpose, multi paradigm and compiled",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/swift",
                            "text": "swift  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "rust  ️",
                        "note": "general purpose, designed to be safe, concurrent and practical, supporting functional and imperative-procedural paradigms",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/rust",
                            "text": "rust  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "scala  ️",
                        "note": "general purpose, functional with strong static type system, compiles to Java bytecode",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/scala",
                            "text": "scala  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "r  ️",
                        "note": "language and software environment for statistical computing and graphics",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/r",
                            "text": "r  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "c++  ️",
                        "note": "imperative, object oriented and generic with low level memory manipulation",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming-languages/c--",
                            "text": "c++  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "c  ️",
                        "note": "imperative, procedural and compiled, low level access to memory",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming-languages/c",
                            "text": "c  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "kotlin  ️",
                        "note": "statically typed, runs on jvm, can be compiled to javascript source code",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/kotlin",
                            "text": "kotlin  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "erlang  ️",
                        "note": "general purpose, concurrent, functional with a garbage collected runtime system",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/erlang",
                            "text": "erlang  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "ruby  ️",
                        "note": "dynamic, reflective, object oriented, general purpose",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/ruby",
                            "text": "ruby  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "lisp  ️",
                        "note": "originally created as mathematical notation for computer programs, was used in AI research, linked lists are one of lisp’s major data structures and lisp source code is made of lists thus allowing to manipulate source code as a data structure",
                        "nodes": [
                          {
                            "text": "racket  ️",
                            "nodes": [],
                            "resources": [
                              {
                                "url": "/programming/programming-languages/racket",
                                "text": "racket  ️",
                                "category": "mindmap",
                                "note": "",
                                "author": "",
                                "score": {
                                  "up": 0,
                                  "down": 0
                                }
                              }
                            ],
                            "author": ""
                          },
                          {
                            "text": "scheme  ️",
                            "nodes": [],
                            "resources": [
                              {
                                "url": "/programming/programming-languages/scheme",
                                "text": "scheme  ️",
                                "category": "mindmap",
                                "note": "",
                                "author": "",
                                "score": {
                                  "up": 0,
                                  "down": 0
                                }
                              }
                            ],
                            "author": ""
                          }
                        ],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/lisp",
                            "text": "lisp  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "nim  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/nim",
                            "text": "nim  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "julia  ️",
                        "note": "high level, dynamic, designed to address needs of high performance numerical analysis and computational science",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/julia",
                            "text": "julia  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "perl  ️",
                        "note": "general purpose, interpreted, dynamic powerful text processing",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/perl",
                            "text": "perl  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "matlab  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/matlab",
                            "text": "matlab  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "c#  ️",
                        "note": "strong typed, imperative, declarative, functional, generic, object oriented and component oriented",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/c-sharp",
                            "text": "c#  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "assembly  ️",
                        "note": "low level, very strong correspondence between the language and architecture’s machine code instructions",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/assembly",
                            "text": "assembly  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "lua  ️",
                        "note": "lightweight, multi-paradigm designed for embedded systems and clients",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/lua",
                            "text": "lua  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "dart  ️",
                        "note": "general purpose, object oriented, class defined, single inheritance",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/dart",
                            "text": "dart  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "OCaml  ️",
                        "note": "extends caml language with object oriented programming constructs",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/ocaml",
                            "text": "OCaml  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "fortran  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/fortran",
                            "text": "fortran  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "d  ️",
                        "note": "object oriented, imperative, multi paradigm system programming language",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/d",
                            "text": "d  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "crystal  ️",
                        "note": "general purpose, object oriented, statically type checked with implementation of advanced global type inference",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/crystal",
                            "text": "crystal  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "SQL  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/sql",
                            "text": "SQL  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      },
                      {
                        "text": "F#  ️",
                        "nodes": [],
                        "resources": [
                          {
                            "url": "/programming/programming-languages/f-sharp",
                            "text": "F#  ️",
                            "category": "mindmap",
                            "note": "",
                            "author": "",
                            "score": {
                              "up": 0,
                              "down": 0
                            }
                          }
                        ],
                        "author": ""
                      }
                    ],
                    "resources": [
                      {
                        "url": "http://www.wikiwand.com/en/Programming_paradigm#/Multi-paradigm",
                        "text": "multi-paradigm",
                        "category": "wiki",
                        "note": "",
                        "author": "",
                        "score": {
                          "up": 0,
                          "down": 0
                        }
                      }
                    ],
                    "author": ""
                  }
                ],
                "resources": [
                  {
                    "url": "/programming/programming-languages/elixir",
                    "text": "elixir  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "haskell  ️",
                "note": "general purpose, purely functional with non strict semantics and strong static typing",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/haskell",
                    "text": "haskell  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "clojure  ️",
                "note": "general purpose with emphasis on functional programming, runs on jam ,clr and js engine, treats code as data and has a macro system",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/clojure",
                    "text": "clojure  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "elm  ️",
                "note": "domain specific for declaratively creating web browser based GUI, purely functional with emphasis on usability, performance and robustness",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/elm",
                    "text": "elm  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "idris  ️",
                "note": "general purpose, purely functional with dependent types, supports interactive theorem proving",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/idris",
                    "text": "idris  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "coq  ️",
                "note": "interactive theorem prover, allows expression of mathematical assertions, mechanically checks proofs of these assertions and helps find formal proofs",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/coq",
                    "text": "coq  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "agda  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/agda",
                    "text": "agda  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "purescript  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/purescript",
                    "text": "purescript  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "frege  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/frege",
                    "text": "frege  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              }
            ],
            "resources": [
              {
                "url": "/programming/programming-paradigms/functional-programming",
                "text": "functional  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "object oriented  ️",
            "nodes": [
              {
                "text": "processing  ️",
                "note": "language and IDE built for electric arts and visual design with educational purpose",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/processing",
                    "text": "processing  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "smalltalk  ️",
                "note": "object oriented, dynamically typed, reflective, created for educational use",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/smalltalk",
                    "text": "smalltalk  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "objective c  ️",
                "note": "general purpose, object oriented, implemented smalltalk-style messaging",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/objective-c",
                    "text": "objective c  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "php  ️",
                "note": "server side scripting designed primarily for webdev, can be embedded into HTML",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/php",
                    "text": "php  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "groovy  ️",
                "note": "object oriented, dynamic, can be used as a scripting language for the java platform, dynamically compiled to jvm bytecode",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/groovy",
                    "text": "groovy  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "solidity  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/solidity",
                    "text": "solidity  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              }
            ],
            "resources": [
              {
                "url": "/programming/programming-paradigms/object-oriented",
                "text": "object oriented  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "logic programming  ️",
            "nodes": [
              {
                "text": "prolog  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/prolog",
                    "text": "prolog  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              }
            ],
            "resources": [
              {
                "url": "/programming/programming-paradigms/logic-programming",
                "text": "logic programming  ️",
                "category": "mindmap",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "scripting",
            "nodes": [
              {
                "text": "applescript  ️",
                "note": "scripting language created by Apple to do inter-application communication using AppleEvents",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/applescript",
                    "text": "applescript  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              }
            ],
            "resources": [
              {
                "url": "http://www.wikiwand.com/en/Scripting_language",
                "text": "scripting",
                "category": "wiki",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "stack-oriented",
            "nodes": [
              {
                "text": "forth  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/forth",
                    "text": "forth  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              }
            ],
            "resources": [
              {
                "url": "http://www.wikiwand.com/en/Stack-oriented_programming_language",
                "text": "stack-oriented",
                "category": "wiki",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "object based",
            "nodes": [
              {
                "text": "visual basic  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/visual-basic",
                    "text": "visual basic  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              }
            ],
            "resources": [
              {
                "url": "http://www.wikiwand.com/en/Object-based_language",
                "text": "object based",
                "category": "wiki",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          },
          {
            "text": "structured",
            "nodes": [
              {
                "text": "brainfuck  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/brainfuck",
                    "text": "brainfuck  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              },
              {
                "text": "pascal  ️",
                "nodes": [],
                "resources": [
                  {
                    "url": "/programming/programming-languages/pascal",
                    "text": "pascal  ️",
                    "category": "mindmap",
                    "note": "",
                    "author": "",
                    "score": {
                      "up": 0,
                      "down": 0
                    }
                  }
                ],
                "author": ""
              }
            ],
            "resources": [
              {
                "url": "http://www.wikiwand.com/en/Structured_programming",
                "text": "structured",
                "category": "wiki",
                "note": "",
                "author": "",
                "score": {
                  "up": 0,
                  "down": 0
                }
              }
            ],
            "author": ""
          }
        ],
        "resources": [
          {
            "url": "/programming/programming-paradigms",
            "text": "paradigms  ️",
            "category": "mindmap",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          }
        ],
        "author": ""
      },
      {
        "text": "help",
        "nodes": [],
        "resources": [
          {
            "url": "http://githut.info/",
            "text": "most popular languages on github",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://github.com/RichardLitt/endangered-languages",
            "text": "endangered languages",
            "category": "github",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://github.com/angrykoala/awesome-esolangs",
            "text": "esoteric programming languages",
            "category": "github",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://learnxinyminutes.com/",
            "text": "learn X in Y minutes",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "https://exploringdata.github.io/vis/programming-languages-influence-network/",
            "text": "programming languages influence network",
            "category": "interactive",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          },
          {
            "url": "http://www.lextrait.com/Vincent/implementations.html",
            "text": "the programming languages beacon",
            "note": "",
            "author": "",
            "score": {
              "up": 0,
              "down": 0
            }
          }
        ],
        "author": ""
      }
    ],
    "resources": [
      {
        "url": "http://www.wikiwand.com/en/Programming_language",
        "text": "programming languages",
        "category": "wiki",
        "note": "",
        "author": "",
        "score": {
          "up": 0,
          "down": 0
        }
      }
    ],
    "author": ""
  }
}